{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/new-user/login-form/login-form.component.ts","webpack:///src/app/components/new-user/login-form/login-form.component.html","webpack:///src/app/components/new-user/new-user-form/new-user-form.component.ts","webpack:///src/app/components/new-user/new-user-form/new-user-form.component.html","webpack:///src/app/components/preferences/categories.ts","webpack:///src/app/components/preferences/preferences-create/preferences-create.component.ts","webpack:///src/app/components/preferences/preferences-create/preferences-create.component.html","webpack:///src/app/components/preferences/preferences-list/preferences-list.component.ts","webpack:///src/app/components/preferences/preferences-list/preferences-list.component.html","webpack:///src/app/components/preferences/preferences-main/preferences-main.component.ts","webpack:///src/app/components/preferences/preferences-main/preferences-main.component.html","webpack:///src/app/components/preferences/preferences-routing.module.ts","webpack:///src/app/components/preferences/preferences.module.ts","webpack:///src/app/components/preferences/preferences.service.ts","webpack:///src/app/components/recipe-book/recipe-book-routing.module.ts","webpack:///src/app/components/recipe-book/recipe-book.module.ts","webpack:///src/app/components/recipe-book/recipe-card/recipe-card.component.ts","webpack:///src/app/components/recipe-book/recipe-card/recipe-card.component.html","webpack:///src/app/components/recipe-book/recipe-details/recipe-details.component.ts","webpack:///src/app/components/recipe-book/recipe-details/recipe-details.component.html","webpack:///src/app/components/recipe-book/recipe-favorites/recipe-favorites.component.ts","webpack:///src/app/components/recipe-book/recipe-favorites/recipe-favorites.component.html","webpack:///src/app/components/recipe-book/recipe-main/recipe-main.component.ts","webpack:///src/app/components/recipe-book/recipe-main/recipe-main.component.html","webpack:///src/app/components/recipe-book/recipe-search/alphabet.ts","webpack:///src/app/components/recipe-book/recipe-search/recipe-search.component.ts","webpack:///src/app/components/recipe-book/recipe-search/recipe-search.component.html","webpack:///src/app/components/user-recipes/user-recipes-create/user-recipes-create.component.ts","webpack:///src/app/components/user-recipes/user-recipes-create/user-recipes-create.component.html","webpack:///src/app/components/user-recipes/user-recipes-main/user-recipes-main.component.ts","webpack:///src/app/components/user-recipes/user-recipes-main/user-recipes-main.component.html","webpack:///src/app/components/user-recipes/user-recipes-routing.module.ts","webpack:///src/app/components/user-recipes/user-recipes.module.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/recipeAPI.service.ts","webpack:///src/app/services/user-recipes.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","m","PreferencesModule","RecipeBookModule","UserRecipesModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MainComponent","recipeApi","loginService","zoom","options","mapTypeId","zoomControl","scrollwheel","disableDoubleClickZoom","maxZoom","minZoom","getUsers","subscribe","data","console","log","getCategories","categories","getGlassware","glasses","getIngredients","ingredients","getAlcoholic","alcoholics","getLetterA","NavbarComponent","LoginFormComponent","fb","loginForm","group","userName","password","loginDate","control","Date","value","onSubmit","NewUserFormComponent","newUserForm","firstName","required","lastName","age","email","pattern","password2","bio","maxLength","date","dob","target","year","getFullYear","today","addNewUser","validateDOB","CATEGORIES","name","PreferencesCreateComponent","preferService","itemForm","info","category","addItems","reset","PreferencesListComponent","items","getItems","itemsSub","getItemUpdateListener","itemId","deleteItem","unsubscribe","PreferencesMainComponent","PreferencesRoutingModule","forChild","PreferencesService","http","itemsUpdated","get","message","next","asObservable","formValue","post","response","filter","item","preference_id","providedIn","RecipeBookRoutingModule","RecipeCardComponent","RecipeDetailsComponent","recipeAPI","route","recipeID","snapshot","params","getDetails","RecipeFavoritesComponent","RecipeMainComponent","recipes","results","nameSearch","ALPHABET","RecipeSearchComponent","alphabet","searchResults","glassware","alcoholic","filterCocktailType","searchName","letterSearch","letter","searchByName","emit","searchByLetter","filterForm","UserRecipesCreateComponent","userRecipeService","element","amount","ingredient","userRecipe","rating","latitude","longitude","method","ingredient1","ingredient2","ingredient3","ingredient4","ingredient5","addNewRecipe","navigator","geolocation","getCurrentPosition","position","coords","getLocation","UserRecipesMainComponent","getRecipes","UserRecipesRoutingModule","LoginService","RecipeApiService","baseUrl","something","UserRecipesService","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainComponent } from './components/main/main.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: MainComponent },\r\n  {\r\n    path: 'preferences',\r\n    loadChildren: () =>\r\n      import('./components/preferences/preferences.module').then(\r\n        (m) => m.PreferencesModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'recipe-book',\r\n    loadChildren: () =>\r\n      import('./components/recipe-book/recipe-book.module').then(\r\n        (m) => m.RecipeBookModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'user-recipes',\r\n    loadChildren: () =>\r\n      import('./components/user-recipes/user-recipes.module').then(\r\n        (m) => m.UserRecipesModule\r\n      ),\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { NewUserFormComponent } from './components/new-user/new-user-form/new-user-form.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { LoginFormComponent } from './components/new-user/login-form/login-form.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { RecipeBookModule } from './components/recipe-book/recipe-book.module';\r\nimport { PreferencesModule } from './components/preferences/preferences.module';\r\nimport { UserRecipesModule } from './components/user-recipes/user-recipes.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    NewUserFormComponent,\r\n    LoginFormComponent,\r\n    NavbarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    GoogleMapsModule,\r\n    ReactiveFormsModule,\r\n    RecipeBookModule,\r\n    PreferencesModule,\r\n    UserRecipesModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RecipeApiService } from '../../services/recipeAPI.service';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css'],\r\n})\r\nexport class MainComponent implements OnInit {\r\n  categories: any[];\r\n  glasses: any[];\r\n  ingredients: any[];\r\n  alcoholics: any[];\r\n  zoom = 12;\r\n  center: google.maps.LatLngLiteral;\r\n  options: google.maps.MapOptions = {\r\n    mapTypeId: 'hybrid',\r\n    zoomControl: false,\r\n    scrollwheel: false,\r\n    disableDoubleClickZoom: true,\r\n    maxZoom: 15,\r\n    minZoom: 8,\r\n  };\r\n\r\n  latitude;\r\n  longitude;\r\n\r\n  constructor(\r\n    private recipeApi: RecipeApiService,\r\n    private loginService: LoginService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginService.getUsers().subscribe((data) => console.log(data));\r\n    this.recipeApi.getCategories().subscribe((data) => {\r\n      this.categories = data['drinks'];\r\n      // console.log(this.categories);\r\n    });\r\n    this.recipeApi.getGlassware().subscribe((data) => {\r\n      this.glasses = data['drinks'];\r\n      // console.log(this.glasses);\r\n    });\r\n    this.recipeApi.getIngredients().subscribe((data) => {\r\n      this.ingredients = data['drinks'];\r\n      console.log('Ingredients', this.ingredients);\r\n    });\r\n    this.recipeApi.getAlcoholic().subscribe((data) => {\r\n      this.alcoholics = data['drinks'];\r\n      // console.log(this.alcoholics);\r\n    });\r\n    this.recipeApi.getLetterA().subscribe((data) => {\r\n      console.log('letter A', data);\r\n    });\r\n    // navigator.geolocation.getCurrentPosition((position) => {\r\n    //   this.center = {\r\n    //     lat: position.coords.latitude,\r\n    //     lng: position.coords.longitude,\r\n    //   };\r\n    //   this.latitude = position.coords.latitude;\r\n    //   this.longitude = position.coords.longitude;\r\n    // });\r\n  }\r\n}\r\n","<div>\r\n  <a routerLink=\"/preferences\">Preferences</a> <br />\r\n  <a routerLink=\"/user-recipes\">User Recipes</a> <br />\r\n  <a routerLink=\"/recipe-book\">Recipe Book</a>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<h1>NavBar</h1>\r\n<a href=\"#\">Posts</a>\r\n<a href=\"#\">Drinks</a>\r\n<a href=\"#\">User</a>\r\n<a href=\"#\">Favorites</a>\r\n<a href=\"#\">Quiz</a>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css'],\n})\nexport class LoginFormComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private loginService: LoginService, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      userName: [''],\n      password: [''],\n      loginDate: this.fb.control(new Date()),\n    });\n  }\n\n  onSubmit() {\n    console.log(this.loginForm.value);\n  }\n}\n","<div class=\"background\">\r\n  <div class=\"body\">\r\n    <h1>Login</h1>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"userName\">Username</label>\r\n        <input type=\"text\" name=\"userName\" formControlName=\"userName\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" name=\"password\" formControlName=\"password\" />\r\n      </div>\r\n      <button type=\"submit\">Log In</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'new-user-form',\r\n  templateUrl: './new-user-form.component.html',\r\n  styleUrls: ['./new-user-form.component.css'],\r\n})\r\nexport class NewUserFormComponent implements OnInit {\r\n  newUserForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private loginService: LoginService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.newUserForm = this.fb.group({\r\n      firstName: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required]],\r\n      userName: ['', [Validators.required]],\r\n      age: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\r\n        ],\r\n      ],\r\n      password2: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\r\n        ],\r\n      ],\r\n      bio: ['', [Validators.maxLength(255)]],\r\n      date: this.fb.control(new Date()),\r\n    });\r\n  }\r\n\r\n  validateDOB(dob) {\r\n    console.log(dob.target.value);\r\n\r\n    let year = new Date(dob.target.value).getFullYear();\r\n    let today = new Date().getFullYear();\r\n    if (today - year >= 21) {\r\n      console.log(`you can drink`);\r\n    } else {\r\n      console.log(`you are not old enough`);\r\n    }\r\n  }\r\n\r\n  // getFirstName() {\r\n  //   return this.newUserForm.get('firstName');\r\n  // }\r\n  // getUserName() {\r\n  //   return this.newUserForm.get('userName');\r\n  // }\r\n  // getAge() {\r\n  //   return this.newUserForm.get('age');\r\n  // }\r\n  // getEmail() {\r\n  //   return this.newUserForm.get('getEmail');\r\n  // }\r\n\r\n  onSubmit() {\r\n    // console.log('form', this.newUserForm.value);\r\n    this.loginService.addNewUser(this.newUserForm.value);\r\n  }\r\n}\r\n","<h1>New User Form</h1>\r\n<form [formGroup]=\"newUserForm\" (ngSubmit)=\"onSubmit()\">\r\n  <!-- first name - required-->\r\n  <div class=\"form-group\">\r\n    <label for=\"firstName\" for=\"label-control\"> First Name:</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" />\r\n    <!-- <div *ngIf=\"firstName.invalid && firstName.touched\">\r\n      <div *ngIf=\"firstName.errors.required\">\r\n \r\n      </div>\r\n    </div> -->\r\n  </div>\r\n  <!-- last name - required -->\r\n  <div class=\"form-group\">\r\n    <label for=\"lastName\" for=\"label-control\">Last Name:</label>\r\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" />\r\n    <!-- <div *ngIf=\"lastName.invalid && lastName.touched\">\r\n      <div *ngIf=\"lastName.errors.required\">\r\n        Last Name is required\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n  <!-- username - required -->\r\n  <div class=\"form-group\">\r\n    <label for=\"userName\" for=\"label-control\"> User Name:</label>\r\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\" />\r\n    <!-- <div *ngIf=\"userName.invalid && userName.touched\">\r\n      <div *ngIf=\"userName.errors.required\">\r\n        Username is required\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n  <!-- age - required -->\r\n  <div class=\"form-group\">\r\n    <label for=\"age\" for=\"label-control\"> Age:</label>\r\n    <input\r\n      formControlName=\"age\"\r\n      class=\"form-control\"\r\n      (change)=\"validateDOB($event)\"\r\n      type=\"date\"\r\n      name=\"dob\"\r\n      placeholder=\"DOB\"\r\n    />\r\n  </div>\r\n  <!-- email - required -->\r\n  <div class=\"form-group\">\r\n    <label for=\"email\" for=\"label-control\">Email:</label>\r\n    <input type=\"email\" formControlName=\"email\" class=\"form-control\" />\r\n    <!-- <div *ngIf=\"userName.invalid && userName.touched\">\r\n      <div *ngIf=\"userName.errors.required\">\r\n        Username is required\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n  <!-- password - required -->\r\n  <div class=\"form-group\">\r\n    <label for=\"password\" for=\"label-control\">Password:</label>\r\n    <input\r\n      type=\"password\"\r\n      formControlName=\"password\"\r\n      class=\"form-control\"\r\n      placeholder=\"password\"\r\n    />\r\n  </div>\r\n  <!-- password -2 - required -->\r\n  <div class=\"form-group\">\r\n    <label for=\"password\" for=\"label-control\">Password:</label>\r\n    <input\r\n      type=\"password\"\r\n      formControlName=\"password\"\r\n      class=\"form-control\"\r\n      placeholder=\"Confirm Password\"\r\n    />\r\n  </div>\r\n  <!-- bio - not required -->\r\n  <div class=\"form-group\">\r\n    <label for=\"bio\" for=\"label-control\" rows=\"4\" cols=\"50\">Biography:</label>\r\n    <textarea formControlName=\"bio\" class=\"form-control\"> </textarea>\r\n  </div>\r\n  <button type=\"submit\">Submit</button>\r\n  <a href=\"#\">Already registered? Click here to login</a>\r\n</form>\r\n","export const CATEGORIES = [\r\n  { name: 'Things at Home', value: 'home_bar' },\r\n  { name: 'Bartenders', value: 'bartenders' },\r\n  { name: 'Places', value: 'places' },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PreferencesService } from '../preferences.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { CATEGORIES } from '../categories';\r\n\r\n@Component({\r\n  selector: 'preferences-create',\r\n  templateUrl: './preferences-create.component.html',\r\n  styleUrls: ['./preferences-create.component.css'],\r\n})\r\nexport class PreferencesCreateComponent implements OnInit {\r\n  categories = CATEGORIES;\r\n  itemForm: FormGroup;\r\n\r\n  constructor(\r\n    private preferService: PreferencesService,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.itemForm = this.fb.group({\r\n      info: [''],\r\n      category: [''],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    // console.log(this.itemForm.value);\r\n    this.preferService.addItems(this.itemForm.value);\r\n    this.itemForm.reset();\r\n  }\r\n}\r\n","<section>\r\n  <form (submit)=\"onSubmit()\" [formGroup]=\"itemForm\">\r\n    <div class=\"form-group\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        formControlName=\"info\"\r\n        placeholder=\"Description\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <select formControlName=\"category\" name=\"category\" id=\"category\">\r\n        <option value=\"\"></option>\r\n        <option *ngFor=\"let item of categories\" value=\"{{ item.value }}\">{{\r\n          item.name\r\n        }}</option>\r\n      </select>\r\n    </div>\r\n    <button type=\"submit\">Save Item</button>\r\n  </form>\r\n</section>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Item } from '../item';\r\nimport { Subscription } from 'rxjs';\r\nimport { PreferencesService } from '../preferences.service';\r\n\r\n@Component({\r\n  selector: 'preferences-list',\r\n  templateUrl: './preferences-list.component.html',\r\n  styleUrls: ['./preferences-list.component.css'],\r\n})\r\nexport class PreferencesListComponent implements OnInit, OnDestroy {\r\n  items: Item[] = [];\r\n  itemsSub: Subscription;\r\n\r\n  constructor(private preferService: PreferencesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.preferService.getItems();\r\n    this.itemsSub = this.preferService\r\n      .getItemUpdateListener()\r\n      .subscribe((items) => {\r\n        this.items = items;\r\n      });\r\n  }\r\n\r\n  onDelete(itemId) {\r\n    this.preferService.deleteItem(itemId);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.itemsSub.unsubscribe();\r\n  }\r\n}\r\n","<section>\r\n  <div class=\"container\" *ngIf=\"items.length > 0\">\r\n    <div *ngFor=\"let item of items\">\r\n      <p>{{ item.preference_id }}</p>\r\n      <p>{{ item.preference_info }}</p>\r\n      <p>{{ item.preference_cat }}</p>\r\n      <button (click)=\"onDelete(item.preference_id)\">Delete</button>\r\n    </div>\r\n  </div>\r\n  <p *ngIf=\"items.length < 0\">No posts yet</p>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PreferencesService } from 'src/app/components/preferences/preferences.service';\r\n\r\n@Component({\r\n  selector: 'preferences-main',\r\n  templateUrl: './preferences-main.component.html',\r\n  styleUrls: ['./preferences-main.component.css'],\r\n})\r\nexport class PreferencesMainComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<section>\r\n  <h1>Preferences Main</h1>\r\n  <preferences-create></preferences-create>\r\n  <preferences-list></preferences-list>\r\n</section>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PreferencesMainComponent } from './preferences-main/preferences-main.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PreferencesMainComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PreferencesRoutingModule {}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PreferencesRoutingModule } from './preferences-routing.module';\r\nimport { PreferencesMainComponent } from './preferences-main/preferences-main.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { PreferencesCreateComponent } from './preferences-create/preferences-create.component';\r\nimport { PreferencesListComponent } from './preferences-list/preferences-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PreferencesMainComponent,\r\n    PreferencesListComponent,\r\n    PreferencesCreateComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PreferencesRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class PreferencesModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Item } from './item';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PreferencesService {\r\n  items: Item[];\r\n  itemsUpdated = new Subject<Item[]>();\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getItems() {\r\n    this.http\r\n      .get<{ message: string; items: any }>('/api/preferences')\r\n      .subscribe((data) => {\r\n        console.log(data.message);\r\n        this.items = data.items;\r\n        this.itemsUpdated.next([...this.items]);\r\n      });\r\n  }\r\n\r\n  getItemUpdateListener() {\r\n    return this.itemsUpdated.asObservable();\r\n  }\r\n\r\n  addItems(formValue) {\r\n    console.log(formValue);\r\n\r\n    this.http\r\n      .post<{ message: string; items: any }>('/api/preferences', formValue)\r\n      .subscribe((response) => {\r\n        console.log(response.message);\r\n        this.itemsUpdated.next(response.items);\r\n      });\r\n  }\r\n\r\n  deleteItem(itemId) {\r\n    this.http\r\n      .delete<{ message: string; items: any }>(`/api/preferences/${itemId}`)\r\n      .subscribe((response) => {\r\n        // console.log(response.message);\r\n        // console.log('service', response.items);\r\n\r\n        this.items = response.items;\r\n        this.items = this.items.filter((item) => item.preference_id !== itemId);\r\n        this.itemsUpdated.next([...this.items]);\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RecipeMainComponent } from './recipe-main/recipe-main.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RecipeMainComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RecipeBookRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RecipeBookRoutingModule } from '../recipe-book/recipe-book-routing.module';\r\nimport { RecipeMainComponent } from '../recipe-book/recipe-main/recipe-main.component';\r\nimport { RecipeFavoritesComponent } from '../recipe-book/recipe-favorites/recipe-favorites.component';\r\nimport { RecipeDetailsComponent } from '../recipe-book/recipe-details/recipe-details.component';\r\nimport { RecipeCardComponent } from '../recipe-book/recipe-card/recipe-card.component';\r\nimport { RecipeSearchComponent } from '../recipe-book/recipe-search/recipe-search.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecipeMainComponent,\r\n    RecipeFavoritesComponent,\r\n    RecipeDetailsComponent,\r\n    RecipeCardComponent,\r\n    RecipeSearchComponent,\r\n  ],\r\n  imports: [CommonModule, RecipeBookRoutingModule, ReactiveFormsModule],\r\n})\r\nexport class RecipeBookModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'recipe-card',\r\n  templateUrl: './recipe-card.component.html',\r\n  styleUrls: ['./recipe-card.component.css'],\r\n})\r\nexport class RecipeCardComponent implements OnInit {\r\n  @Input() recipe;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"card-container\">\r\n  <h3>{{ recipe.strDrink }}</h3>\r\n  <p>\r\n    <a routerLink=\"recipe-details/{{ recipe.idDrink }}\">more details</a>\r\n  </p>\r\n  <img\r\n    src=\"{{ recipe.strDrinkThumb }}\"\r\n    alt=\"{{ recipe.strDrink }}\"\r\n    width=\"100px\"\r\n  />\r\n  <p>Glassware: {{ recipe.strGlass }}</p>\r\n  <ul>\r\n    <h4>Ingredients</h4>\r\n    <li>{{ recipe.strMeasure1 }} {{ recipe.strIngredient1 }}</li>\r\n    <li>{{ recipe.strMeasure2 }} {{ recipe.strIngredient2 }}</li>\r\n    <li>{{ recipe.strMeasure3 }} {{ recipe.strIngredient3 }}</li>\r\n    <li>{{ recipe.strMeasure4 }} {{ recipe.strIngredient4 }}</li>\r\n    <li>{{ recipe.strMeasure5 }} {{ recipe.strIngredient5 }}</li>\r\n    <li>{{ recipe.strMeasure6 }} {{ recipe.strIngredient6 }}</li>\r\n    <li>{{ recipe.strMeasure7 }} {{ recipe.strIngredient7 }}</li>\r\n    <li>{{ recipe.strMeasure8 }} {{ recipe.strIngredient8 }}</li>\r\n    <li>{{ recipe.strMeasure9 }} {{ recipe.strIngredient9 }}</li>\r\n    <li>{{ recipe.strMeasure10 }} {{ recipe.strIngredient10 }}</li>\r\n    <li>{{ recipe.strMeasure11 }} {{ recipe.strIngredient11 }}</li>\r\n    <li>{{ recipe.strMeasure12 }} {{ recipe.strIngredient12 }}</li>\r\n    <li>{{ recipe.strMeasure13 }} {{ recipe.strIngredient13 }}</li>\r\n    <li>{{ recipe.strMeasure14 }} {{ recipe.strIngredient14 }}</li>\r\n    <li>{{ recipe.strMeasure15 }} {{ recipe.strIngredient15 }}</li>\r\n  </ul>\r\n  <p>Method: {{ recipe.strInstructions }}</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RecipeApiService } from '../../../services/recipeAPI.service';\r\n\r\n@Component({\r\n  selector: 'app-recipe-details',\r\n  templateUrl: './recipe-details.component.html',\r\n  styleUrls: ['./recipe-details.component.css'],\r\n})\r\nexport class RecipeDetailsComponent implements OnInit {\r\n  recipeDetails;\r\n  recipeID: number;\r\n\r\n  constructor(\r\n    private recipeAPI: RecipeApiService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.recipeID = this.route.snapshot.params.recipeID;\r\n\r\n    this.recipeAPI.getDetails(this.recipeID).subscribe((data) => {\r\n      console.log(data);\r\n    });\r\n  }\r\n}\r\n","<p>recipe-details works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recipe-favorites',\r\n  templateUrl: './recipe-favorites.component.html',\r\n  styleUrls: ['./recipe-favorites.component.css']\r\n})\r\nexport class RecipeFavoritesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>recipe-favorites works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RecipeApiService } from 'src/app/services/recipeAPI.service';\r\n\r\n@Component({\r\n  selector: 'recipe-main',\r\n  templateUrl: './recipe-main.component.html',\r\n  styleUrls: ['./recipe-main.component.css'],\r\n})\r\nexport class RecipeMainComponent implements OnInit {\r\n  recipes: any[];\r\n\r\n  constructor(private recipeApi: RecipeApiService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.recipeApi.getLetterA().subscribe((data) => {\r\n      this.recipes = data['drinks'];\r\n      console.log(this.recipes);\r\n    });\r\n  }\r\n\r\n  nameSearch(results) {\r\n    // console.log(results);\r\n    this.recipes = results;\r\n  }\r\n}\r\n","<recipe-search (searchResults)=\"nameSearch($event)\"></recipe-search>\r\n<recipe-card [recipe]=\"recipe\" *ngFor=\"let recipe of recipes\"></recipe-card>\r\n","export const ALPHABET: string[] = [\r\n  'a',\r\n  'b',\r\n  'c',\r\n  'd',\r\n  'e',\r\n  'f',\r\n  'g',\r\n  'h',\r\n  'i',\r\n  'j',\r\n  'k',\r\n  'l',\r\n  'm',\r\n  'n',\r\n  'o',\r\n  'p',\r\n  'q',\r\n  'r',\r\n  's',\r\n  't',\r\n  'u',\r\n  'v',\r\n  'w',\r\n  'x',\r\n  'y',\r\n  'z',\r\n];\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { RecipeApiService } from '../../../services/recipeAPI.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ALPHABET } from './alphabet';\r\n\r\n@Component({\r\n  selector: 'recipe-search',\r\n  templateUrl: './recipe-search.component.html',\r\n  styleUrls: ['./recipe-search.component.css'],\r\n})\r\nexport class RecipeSearchComponent implements OnInit {\r\n  glassware: any;\r\n  alcoholic: any;\r\n  categories: any;\r\n  alphabet: string[] = ALPHABET;\r\n  filterForm: FormGroup;\r\n  nameSearch: FormGroup;\r\n  letterSearch: FormGroup;\r\n  @Output() searchResults = new EventEmitter();\r\n\r\n  constructor(private fb: FormBuilder, private recipeAPI: RecipeApiService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.recipeAPI.getGlassware().subscribe((data) => {\r\n      this.glassware = data['drinks'];\r\n    });\r\n    this.recipeAPI.getAlcoholic().subscribe((data) => {\r\n      this.alcoholic = data['drinks'];\r\n    });\r\n    this.recipeAPI.getCategories().subscribe((data) => {\r\n      this.categories = data['drinks'];\r\n    });\r\n\r\n    this.recipeAPI.filterCocktailType().subscribe((data) => {\r\n      console.log('filter cocktails', data['drinks']);\r\n    });\r\n\r\n    // this.filterForm = this.fb.group({\r\n    //   glassware: [''],\r\n    //   categories: [''],\r\n    //   booze: [''],\r\n    //   alphabet: [''],\r\n    // });\r\n    this.nameSearch = this.fb.group({\r\n      searchName: [''],\r\n    });\r\n\r\n    this.letterSearch = this.fb.group({\r\n      letter: [''],\r\n    });\r\n  }\r\n\r\n  searchByName() {\r\n    this.recipeAPI\r\n      .searchByName(this.nameSearch.value)\r\n      .subscribe((data) => this.searchResults.emit(data['drinks']));\r\n  }\r\n\r\n  searchByLetter() {\r\n    this.recipeAPI.searchByLetter(this.letterSearch.value).subscribe((data) => {\r\n      this.searchResults.emit(data['drinks']);\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.filterForm.reset();\r\n  }\r\n}\r\n","<!-- <form [formGroup]=\"filterForm\">\r\n  <div class=\"form-group\">\r\n    <label for=\"categories\"> Choose a Category</label>\r\n    <select formControlName=\"categories\" name=\"categories\" id=\"categories\">\r\n      <option value=\"\">Category</option>\r\n      <option\r\n        *ngFor=\"let category of categories\"\r\n        value=\"{{ category.strCategory }}\"\r\n        >{{ category.strCategory }}</option\r\n      >\r\n    </select>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"alphabet\"> Choose a Letter</label>\r\n    <select formControlName=\"alphabet\" name=\"alphabet\" id=\"alphabet\">\r\n      <option value=\"\">Letters</option>\r\n      <option *ngFor=\"let letters of alphabet\" value=\"{{ letters }}\">{{\r\n        letters\r\n      }}</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <select formControlName=\"glassware\" name=\"glassware\" id=\"glassware\">\r\n      <option value=\"\">Glassware</option>\r\n      <option *ngFor=\"let glass of glassware\" value=\"{{ glass.strGlass }}\">{{\r\n        glass.strGlass\r\n      }}</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <input\r\n      formControlName=\"booze\"\r\n      type=\"radio\"\r\n      id=\"Alcoholic\"\r\n      name=\"booze\"\r\n      value=\"Alcoholic\"\r\n    />\r\n    <label for=\"Alcoholic\">Alcoholic</label><br />\r\n    <input\r\n      formControlName=\"booze\"\r\n      type=\"radio\"\r\n      id=\"non-alcoholic\"\r\n      name=\"booze\"\r\n      value=\"Non alcoholic\"\r\n    />\r\n    <label for=\"non-alcoholic\">Non Alcoholic</label><br />\r\n  </div>\r\n  <button (click)=\"resetForm()\">Reset Form</button>\r\n</form> -->\r\n\r\n<form [formGroup]=\"nameSearch\" (ngSubmit)=\"searchByName()\">\r\n  <div class=\"form-group\">\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Search by Name\"\r\n      formControlName=\"searchName\"\r\n    />\r\n  </div>\r\n  <button type=\"submit\">Submit</button>\r\n</form>\r\n\r\n<form [formGroup]=\"letterSearch\" (ngSubmit)=\"searchByLetter()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"alphabet\"> Choose a Letter</label>\r\n    <select formControlName=\"letter\" name=\"letter\" id=\"letter\">\r\n      <option value=\"\">Letters</option>\r\n      <option *ngFor=\"let letters of alphabet\" value=\"{{ letters }}\">{{\r\n        letters\r\n      }}</option>\r\n    </select>\r\n  </div>\r\n  <button type=\"submit\">Submit</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { RecipeApiService } from 'src/app/services/recipeAPI.service';\r\nimport { UserRecipesService } from 'src/app/services/user-recipes.service';\r\n\r\n@Component({\r\n  selector: 'user-recipes-create',\r\n  templateUrl: './user-recipes-create.component.html',\r\n  styleUrls: ['./user-recipes-create.component.css'],\r\n})\r\nexport class UserRecipesCreateComponent implements OnInit {\r\n  userRecipe: FormGroup;\r\n  ratingChange;\r\n  glassware;\r\n  latitude;\r\n  longitude;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private recipeAPI: RecipeApiService,\r\n    private userRecipeService: UserRecipesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.recipeAPI.getGlassware().subscribe((data) => {\r\n      this.glassware = data['drinks'];\r\n    });\r\n    const element = this.fb.group({\r\n      amount: [''],\r\n      ingredient: [''],\r\n    });\r\n\r\n    this.userRecipe = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      rating: [''],\r\n      glassware: [''],\r\n      latitude: [''],\r\n      longitude: [''],\r\n      method: [''],\r\n      ingredient1: element,\r\n      ingredient2: element,\r\n      ingredient3: element,\r\n      ingredient4: element,\r\n      ingredient5: element,\r\n      date: this.fb.control(new Date()),\r\n    });\r\n  }\r\n\r\n  // removeIngredient(i) {\r\n  //   let ingredientsArray = this.userRecipe.controls.ingredients as FormArray;\r\n  //   ingredientsArray.removeAt(i);\r\n  // }\r\n\r\n  // addIngredient() {\r\n  //   let ingredientsArray = this.userRecipe.controls.ingredients as FormArray;\r\n  //   let arrayLen = ingredientsArray.length;\r\n\r\n  //   let newIngredientGroup: FormGroup = this.fb.group({\r\n  //     amount: [''],\r\n  //     ingredient: [''],\r\n  //   });\r\n\r\n  //   ingredientsArray.insert(arrayLen, newIngredientGroup);\r\n  // }\r\n\r\n  changeRating(value) {\r\n    console.log(value);\r\n\r\n    // this.ratingChange = value;\r\n  }\r\n  onSubmit() {\r\n    this.userRecipeService.addNewRecipe(this.userRecipe.value);\r\n  }\r\n\r\n  getLocation() {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.latitude = position.coords.latitude;\r\n      this.longitude = position.coords.longitude;\r\n    });\r\n  }\r\n}\r\n","<div class=\"background\">\r\n  <div class=\"body\">\r\n    <h1>Add Recipe</h1>\r\n    <form [formGroup]=\"userRecipe\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label>Drink Name</label>\r\n        <input type=\"text\" formControlName=\"name\" />\r\n      </div>\r\n      <!-- ratings slider -->\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"5\"\r\n          value=\"0\"\r\n          step=\".5\"\r\n          class=\"slider\"\r\n          id=\"rating-slider\"\r\n          formControlName=\"rating\"\r\n        />\r\n        <!-- <span>Rating: {{ ratingChange.value }}</span> -->\r\n      </div>\r\n      <!-- glassware dropdown -->\r\n      <div class=\"form-group\">\r\n        <select formControlName=\"glassware\" name=\"glassware\" id=\"glassware\">\r\n          <option value=\"\">Glassware</option>\r\n          <option\r\n            *ngFor=\"let glass of glassware\"\r\n            value=\"{{ glass.strGlass }}\"\r\n            >{{ glass.strGlass }}</option\r\n          >\r\n        </select>\r\n      </div>\r\n      <!-- location -->\r\n      <div class=\"form-group\">\r\n        <button (click)=\"getLocation()\">Get Location</button>\r\n        <p>\r\n          Latitude: <span>{{ latitude }}</span\r\n          >&deg;\r\n        </p>\r\n        <p>\r\n          Longitude: <span>{{ longitude }}</span\r\n          >&deg;\r\n        </p>\r\n      </div>\r\n      <!-- method -->\r\n      <div class=\"form-group\">\r\n        <label for=\"method\">Method:</label>\r\n        <textarea\r\n          name=\"method\"\r\n          class=\"methodInput\"\r\n          formControlName=\"method\"\r\n          id=\"method\"\r\n          cols=\"1\"\r\n          rows=\"1\"\r\n        ></textarea>\r\n      </div>\r\n      <!-- ingredient -->\r\n      <div class=\"formGroupLabel\">\r\n        <label class=\"amount\" for=\"amount\">Amount:</label>\r\n        <label class=\"ingredient\" for=\"ingredient\">Ingredient:</label>\r\n      </div>\r\n      <div class=\"formFields\">\r\n        <div formGroupName=\"ingredient1\">\r\n          <input type=\"text\" formControlName=\"amount\" />\r\n          <input type=\"text\" formControlName=\"ingredient\" />\r\n        </div>\r\n\r\n        <div formGroupName=\"ingredient2\">\r\n          <input class=\"\" type=\"text\" formControlName=\"amount\" />\r\n          <input type=\"text\" formControlName=\"ingredient\" />\r\n        </div>\r\n        <div formGroupName=\"ingredient3\">\r\n          <input type=\"text\" formControlName=\"amount\" />\r\n          <input type=\"text\" formControlName=\"ingredient\" />\r\n        </div>\r\n        <div formGroupName=\"ingredient4\">\r\n          <input type=\"text\" formControlName=\"amount\" />\r\n          <input type=\"text\" formControlName=\"ingredient\" />\r\n        </div>\r\n        <div formGroupName=\"ingredient5\">\r\n          <input type=\"text\" formControlName=\"amount\" />\r\n          <input type=\"text\" formControlName=\"ingredient\" />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- submit button -->\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserRecipesService } from 'src/app/services/user-recipes.service';\r\n\r\n@Component({\r\n  selector: 'user-recipes-main',\r\n  templateUrl: './user-recipes-main.component.html',\r\n  styleUrls: ['./user-recipes-main.component.css'],\r\n})\r\nexport class UserRecipesMainComponent implements OnInit {\r\n  constructor(private userRecipeService: UserRecipesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userRecipeService\r\n      .getRecipes()\r\n      .subscribe((data) => console.log('User Recipes', data));\r\n  }\r\n}\r\n","<user-recipes-create></user-recipes-create>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserRecipesMainComponent } from './user-recipes-main/user-recipes-main.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserRecipesMainComponent,\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserRecipesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserRecipesMainComponent } from './user-recipes-main/user-recipes-main.component';\nimport { UserRecipesCreateComponent } from './user-recipes-create/user-recipes-create.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UserRecipesRoutingModule } from './user-recipes-routing.module';\n\n@NgModule({\n  declarations: [UserRecipesMainComponent, UserRecipesCreateComponent],\n  imports: [CommonModule, ReactiveFormsModule, UserRecipesRoutingModule],\n})\nexport class UserRecipesModule {}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsers(): any {\r\n    return this.http.get('/api/users');\r\n  }\r\n\r\n  addNewUser(formValue) {\r\n    this.http\r\n      .post<{ message: string }>('/api/users', formValue)\r\n      .subscribe((response) => {\r\n        console.log(response.message);\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RecipeApiService {\r\n  baseUrl = 'https://www.thecocktaildb.com/api/json/v2/9973533/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // list the categories\r\n  getCategories() {\r\n    return this.http.get(`${this.baseUrl}list.php?c=list`);\r\n  }\r\n\r\n  // glassware\r\n  getGlassware() {\r\n    return this.http.get(`${this.baseUrl}list.php?g=list`);\r\n  }\r\n\r\n  getAlcoholic() {\r\n    return this.http.get(`${this.baseUrl}list.php?a=list`);\r\n  }\r\n  getLetterA() {\r\n    return this.http.get(`${this.baseUrl}search.php?f=a`);\r\n  }\r\n\r\n  getLetter(letter) {\r\n    return this.http.get(`${this.baseUrl}search.php?f=${letter}`);\r\n  }\r\n\r\n  getIngredients() {\r\n    return this.http.get(`${this.baseUrl}list.php?i=list`);\r\n  }\r\n\r\n  getDetails(recipeID) {\r\n    return this.http.get(`${this.baseUrl}lookup.php?i=${recipeID}`);\r\n  }\r\n\r\n  filterNA(something) {\r\n    return this.http.get(`${this.baseUrl}filter.php?a=Alcoholic`);\r\n  }\r\n\r\n  filterCocktailType() {\r\n    return this.http.get(`${this.baseUrl}filter.php?g=Cocktail_glass`);\r\n  }\r\n\r\n  searchByName(name) {\r\n    return this.http.get(`${this.baseUrl}search.php?s=${name.searchName}`);\r\n  }\r\n\r\n  searchByLetter(letter) {\r\n    // console.log(letter);\r\n    return this.http.get(`${this.baseUrl}search.php?f=${letter.letter}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserRecipesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addNewRecipe(formValue) {\r\n    console.log(formValue);\r\n\r\n    this.http\r\n      .post<{ message: string }>('/api/recipes', formValue)\r\n      .subscribe((response) => {\r\n        console.log(response.message);\r\n      });\r\n  }\r\n\r\n  getRecipes() {\r\n    return this.http.get('/api/recipes');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}