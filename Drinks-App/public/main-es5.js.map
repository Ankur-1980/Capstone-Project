{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/login/login-form/login-form.component.ts","webpack:///src/app/components/login/login-form/login-form.component.html","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/main/main.component.html","webpack:///src/app/services/drinksAPI.service.ts","webpack:///src/app/services/location-api.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LoginFormComponent","fb","loginService","loginForm","group","firstName","lastName","userName","required","age","min","email","password","pattern","get","addNewUser","value","onSubmit","MainComponent","drinksApi","locationApi","zoom","options","mapTypeId","zoomControl","scrollwheel","disableDoubleClickZoom","maxZoom","minZoom","getCategories","subscribe","data","categories","getGlassware","glasses","getIngredients","ingredients","console","log","getAlcoholic","alcoholics","getLetterA","navigator","geolocation","getCurrentPosition","position","center","lat","coords","latitude","lng","longitude","DrinksApiService","http","baseUrl","providedIn","LocationAPIService","LoginService","formValue","post","response","message","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<login-form></login-form>\n<app-main></app-main>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { LoginFormComponent } from './components/login/login-form/login-form.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, MainComponent, LoginFormComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    GoogleMapsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css'],\n})\nexport class LoginFormComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private loginService: LoginService) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      firstName: [''],\n      lastName: [''],\n      userName: ['', [Validators.required]],\n      age: ['21', [Validators.min(21), Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        ],\n      ],\n    });\n  }\n\n  getFirstName() {\n    return this.loginForm.get('firstName');\n  }\n  getUserName() {\n    return this.loginForm.get('userName');\n  }\n  getAge() {\n    return this.loginForm.get('age');\n  }\n  getEmail() {\n    return this.loginForm.get('getEmail');\n  }\n\n  onSubmit() {\n    // console.log('form', this.loginForm.value);\n    this.loginService.addNewUser(this.loginForm.value);\n  }\n}\n","<h1>Login Form</h1>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <!-- first name - required-->\n  <div class=\"form-group\">\n    <label for=\"firstName\" for=\"label-control\"> First Name:</label>\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" />\n    <!-- <div *ngIf=\"firstName.invalid && firstName.touched\">\n      <div *ngIf=\"firstName.errors.required\">\n        First Name is required\n      </div>\n    </div> -->\n  </div>\n  <!-- last name - not required -->\n  <div class=\"form-group\">\n    <label for=\"lastName\" for=\"label-control\">Last Name:</label>\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" />\n  </div>\n  <!-- username - required -->\n  <div class=\"form-group\">\n    <label for=\"userName\" for=\"label-control\"> User Name:</label>\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\" />\n  </div>\n  <!-- age - required -->\n  <div class=\"form-group\">\n    <label for=\"age\" for=\"label-control\"> Age:</label>\n    <input type=\"number\" formControlName=\"age\" class=\"form-control\" />\n  </div>\n  <!-- email - required -->\n  <div class=\"form-group\">\n    <label for=\"email\" for=\"label-control\">Email:</label>\n    <input type=\"email\" formControlName=\"email\" class=\"form-control\" />\n  </div>\n  <!-- password - required -->\n  <div class=\"form-group\">\n    <label for=\"password\" for=\"label-control\">Password:</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" />\n  </div>\n  <button type=\"submit\">Submit</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\r\nimport { DrinksApiService } from '../../services/drinksAPI.service';\r\nimport { LocationAPIService } from '../../services/location-api.service';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css'],\r\n})\r\nexport class MainComponent implements OnInit {\r\n  categories: any[];\r\n  glasses: any[];\r\n  ingredients: any[];\r\n  alcoholics: any[];\r\n  zoom = 12;\r\n  center: google.maps.LatLngLiteral;\r\n  options: google.maps.MapOptions = {\r\n    mapTypeId: 'hybrid',\r\n    zoomControl: false,\r\n    scrollwheel: false,\r\n    disableDoubleClickZoom: true,\r\n    maxZoom: 15,\r\n    minZoom: 8,\r\n  };\r\n\r\n  latitude;\r\n  longitude;\r\n\r\n  constructor(\r\n    private drinksApi: DrinksApiService,\r\n    private locationApi: LocationAPIService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.drinksApi.getCategories().subscribe((data) => {\r\n      this.categories = data['drinks'];\r\n      // console.log(this.categories);\r\n    });\r\n\r\n    this.drinksApi.getGlassware().subscribe((data) => {\r\n      this.glasses = data['drinks'];\r\n      // console.log(this.glasses);\r\n    });\r\n\r\n    this.drinksApi.getIngredients().subscribe((data) => {\r\n      this.ingredients = data['drinks'];\r\n      console.log('Ingredients', this.ingredients);\r\n    });\r\n\r\n    this.drinksApi.getAlcoholic().subscribe((data) => {\r\n      this.alcoholics = data['drinks'];\r\n      // console.log(this.alcoholics);\r\n    });\r\n\r\n    this.drinksApi.getLetterA().subscribe((data) => {\r\n      console.log('letter A', data);\r\n    });\r\n\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.center = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      };\r\n      this.latitude = position.coords.latitude;\r\n      this.longitude = position.coords.longitude;\r\n    });\r\n  }\r\n\r\n  zoomIn() {\r\n    if (this.zoom < this.options.maxZoom) this.zoom++;\r\n  }\r\n\r\n  zoomOut() {\r\n    if (this.zoom > this.options.minZoom) this.zoom--;\r\n  }\r\n\r\n  // getGeoLocation() {\r\n  //   if ('geolocation' in navigator) {\r\n  //     console.log('geolocation available');\r\n  //     navigator.geolocation.getCurrentPosition((position) => {\r\n  //       console.log(position);\r\n  //       this.latitude = position.coords.latitude;\r\n  //       this.longitude = position.coords.longitude;\r\n  //     });\r\n  //   } else {\r\n  //     console.log('geolocation not available');\r\n  //   }\r\n  // }\r\n}\r\n","<ul>\r\n  <h1>Categories</h1>\r\n  <li *ngFor=\"let category of categories\">{{ category.strCategory }}</li>\r\n</ul>\r\n\r\n<ul>\r\n  <h1>Glasses</h1>\r\n  <li *ngFor=\"let glass of glasses\">{{ glass.strGlass }}</li>\r\n</ul>\r\n\r\n<!-- <ul>\r\n  <h1>Ingredients</h1>\r\n  <li *ngFor=\"let ingredient of ingredients\">{{ ingredients.strCategory }}</li>\r\n</ul> -->\r\n\r\n<ul>\r\n  <h1>Alcoholic</h1>\r\n  <li *ngFor=\"let alcoholic of alcoholics\">{{ alcoholic.strAlcoholic }}</li>\r\n</ul>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DrinksApiService {\n  baseUrl = 'https://www.thecocktaildb.com/api/json/v2/9973533/';\n\n  constructor(private http: HttpClient) {}\n\n  getCategories() {\n    return this.http.get(`${this.baseUrl}list.php?c=list`);\n  }\n\n  getGlassware() {\n    return this.http.get(`${this.baseUrl}list.php?g=list`);\n  }\n\n  getIngredients() {\n    return this.http.get(`${this.baseUrl}list.php?i=list`);\n  }\n\n  getAlcoholic() {\n    return this.http.get(`${this.baseUrl}list.php?a=list`);\n  }\n\n  getLetterA() {\n    return this.http.get(`${this.baseUrl}search.php?f=a`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocationAPIService {\n  constructor(private http: HttpClient) {}\n\n\n\n  // googleLocation() {\n\n  // }\n  // https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${this.latitude},${this.longitude}&key=AIzaSyBhOU1Ihjofs0XFDQA5rlMA1Fvs4Y3Mz3E\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  constructor(private http: HttpClient) {}\n\n  addNewUser(formValue) {\n    this.http\n      .post<{ message: string }>('http://localhost:3000/users', formValue)\n      .subscribe((response) => {\n        console.log(response.message);\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}