{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/new-user/new-user-form/new-user-form.component.ts","webpack:///src/app/components/new-user/new-user-form/new-user-form.component.html","webpack:///src/app/components/recipe-book/recipe-card/recipe-card.component.ts","webpack:///src/app/components/recipe-book/recipe-card/recipe-card.component.html","webpack:///src/app/components/recipe-book/recipe-details/recipe-details.component.ts","webpack:///src/app/components/recipe-book/recipe-details/recipe-details.component.html","webpack:///src/app/components/recipe-book/recipe-favorites/recipe-favorites.component.ts","webpack:///src/app/components/recipe-book/recipe-favorites/recipe-favorites.component.html","webpack:///src/app/components/recipe-book/recipe-main/recipe-main.component.ts","webpack:///src/app/components/recipe-book/recipe-main/recipe-main.component.html","webpack:///src/app/components/recipe-book/recipe-search/recipe-search.component.ts","webpack:///src/app/components/recipe-book/recipe-search/recipe-search.component.html","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/recipeAPI.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MainComponent","recipeApi","loginService","zoom","options","mapTypeId","zoomControl","scrollwheel","disableDoubleClickZoom","maxZoom","minZoom","getUsers","subscribe","data","console","log","getCategories","categories","getGlassware","glasses","getIngredients","ingredients","getAlcoholic","alcoholics","getLetterA","NewUserFormComponent","fb","loginForm","group","firstName","required","lastName","userName","age","email","password","pattern","bio","maxLength","dob","target","value","year","Date","getFullYear","today","get","addNewUser","onSubmit","validateDOB","RecipeCardComponent","RecipeDetailsComponent","RecipeFavoritesComponent","RecipeMainComponent","RecipeSearchComponent","LoginService","http","users","formValue","post","response","message","providedIn","RecipeApiService","baseUrl","letter","recipeId","something","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<recipe-main></recipe-main>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { NewUserFormComponent } from './components/new-user/new-user-form/new-user-form.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RecipeMainComponent } from './components/recipe-book/recipe-main/recipe-main.component';\nimport { RecipeFavoritesComponent } from './components/recipe-book/recipe-favorites/recipe-favorites.component';\nimport { RecipeDetailsComponent } from './components/recipe-book/recipe-details/recipe-details.component';\nimport { RecipeCardComponent } from './components/recipe-book/recipe-card/recipe-card.component';\nimport { RecipeSearchComponent } from './components/recipe-book/recipe-search/recipe-search.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, MainComponent, NewUserFormComponent, RecipeMainComponent, RecipeFavoritesComponent, RecipeDetailsComponent, RecipeCardComponent, RecipeSearchComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    GoogleMapsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RecipeApiService } from '../../services/recipeAPI.service';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css'],\r\n})\r\nexport class MainComponent implements OnInit {\r\n  categories: any[];\r\n  glasses: any[];\r\n  ingredients: any[];\r\n  alcoholics: any[];\r\n  zoom = 12;\r\n  center: google.maps.LatLngLiteral;\r\n  options: google.maps.MapOptions = {\r\n    mapTypeId: 'hybrid',\r\n    zoomControl: false,\r\n    scrollwheel: false,\r\n    disableDoubleClickZoom: true,\r\n    maxZoom: 15,\r\n    minZoom: 8,\r\n  };\r\n\r\n  latitude;\r\n  longitude;\r\n\r\n  constructor(\r\n    private recipeApi: RecipeApiService,\r\n    private loginService: LoginService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginService.getUsers().subscribe((data) => console.log(data));\r\n\r\n    this.recipeApi.getCategories().subscribe((data) => {\r\n      this.categories = data['drinks'];\r\n      // console.log(this.categories);\r\n    });\r\n\r\n    this.recipeApi.getGlassware().subscribe((data) => {\r\n      this.glasses = data['drinks'];\r\n      // console.log(this.glasses);\r\n    });\r\n\r\n    this.recipeApi.getIngredients().subscribe((data) => {\r\n      this.ingredients = data['drinks'];\r\n      console.log('Ingredients', this.ingredients);\r\n    });\r\n\r\n    this.recipeApi.getAlcoholic().subscribe((data) => {\r\n      this.alcoholics = data['drinks'];\r\n      // console.log(this.alcoholics);\r\n    });\r\n\r\n    this.recipeApi.getLetterA().subscribe((data) => {\r\n      console.log('letter A', data);\r\n    });\r\n\r\n    // navigator.geolocation.getCurrentPosition((position) => {\r\n    //   this.center = {\r\n    //     lat: position.coords.latitude,\r\n    //     lng: position.coords.longitude,\r\n    //   };\r\n    //   this.latitude = position.coords.latitude;\r\n    //   this.longitude = position.coords.longitude;\r\n    // });\r\n  }\r\n}\r\n","<ul>\r\n  <h1>Categories</h1>\r\n  <li *ngFor=\"let category of categories\">{{ category.strCategory }}</li>\r\n</ul>\r\n\r\n<ul>\r\n  <h1>Glasses</h1>\r\n  <li *ngFor=\"let glass of glasses\">{{ glass.strGlass }}</li>\r\n</ul>\r\n\r\n<!-- <ul>\r\n  <h1>Ingredients</h1>\r\n  <li *ngFor=\"let ingredient of ingredients\">{{ ingredients.strCategory }}</li>\r\n</ul> -->\r\n\r\n<ul>\r\n  <h1>Alcoholic</h1>\r\n  <li *ngFor=\"let alcoholic of alcoholics\">{{ alcoholic.strAlcoholic }}</li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'new-user-form',\n  templateUrl: './new-user-form.component.html',\n  styleUrls: ['./new-user-form.component.css'],\n})\nexport class NewUserFormComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private loginService: LoginService) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      userName: ['', [Validators.required]],\n      age: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        ],\n      ],\n      bio: ['', [Validators.maxLength(255)]],\n    });\n  }\n\n  validateDOB(dob) {\n    console.log(dob.target.value);\n\n    let year = new Date(dob.target.value).getFullYear();\n    let today = new Date().getFullYear();\n    if (today - year >= 21) {\n      console.log(`you can drink`);\n    } else {\n      console.log(`you are not old enough`);\n    }\n  }\n\n  getFirstName() {\n    return this.loginForm.get('firstName');\n  }\n  getUserName() {\n    return this.loginForm.get('userName');\n  }\n  getAge() {\n    return this.loginForm.get('age');\n  }\n  getEmail() {\n    return this.loginForm.get('getEmail');\n  }\n\n  onSubmit() {\n    // console.log('form', this.loginForm.value);\n    this.loginService.addNewUser(this.loginForm.value);\n  }\n}\n","<h1>Login Form</h1>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <!-- first name - required-->\n  <div class=\"form-group\">\n    <label for=\"firstName\" for=\"label-control\"> First Name:</label>\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" />\n    <!-- <div *ngIf=\"firstName.invalid && firstName.touched\">\n      <div *ngIf=\"firstName.errors.required\">\n        First Name is required\n      </div>\n    </div> -->\n  </div>\n  <!-- last name - required -->\n  <div class=\"form-group\">\n    <label for=\"lastName\" for=\"label-control\">Last Name:</label>\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" />\n    <!-- <div *ngIf=\"lastName.invalid && lastName.touched\">\n      <div *ngIf=\"lastName.errors.required\">\n        Last Name is required\n      </div>\n    </div> -->\n  </div>\n  <!-- username - required -->\n  <div class=\"form-group\">\n    <label for=\"userName\" for=\"label-control\"> User Name:</label>\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\" />\n    <!-- <div *ngIf=\"userName.invalid && userName.touched\">\n      <div *ngIf=\"userName.errors.required\">\n        Username is required\n      </div>\n    </div> -->\n  </div>\n  <!-- age - required -->\n  <div class=\"form-group\">\n    <label for=\"age\" for=\"label-control\"> Age:</label>\n    <input\n      formControlName=\"age\"\n      class=\"form-control\"\n      (change)=\"validateDOB($event)\"\n      type=\"date\"\n      name=\"dob\"\n      placeholder=\"DOB\"\n    />\n  </div>\n  <!-- email - required -->\n  <div class=\"form-group\">\n    <label for=\"email\" for=\"label-control\">Email:</label>\n    <input type=\"email\" formControlName=\"email\" class=\"form-control\" />\n    <!-- <div *ngIf=\"userName.invalid && userName.touched\">\n      <div *ngIf=\"userName.errors.required\">\n        Username is required\n      </div>\n    </div> -->\n  </div>\n  <!-- password - required -->\n  <div class=\"form-group\">\n    <label for=\"password\" for=\"label-control\">Password:</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" />\n    <!-- <div *ngIf=\"userName.invalid && userName.touched\">\n      <div *ngIf=\"userName.errors.required\">\n        Username is required\n      </div>\n    </div> -->\n  </div>\n  <!-- bio - no required -->\n  <div class=\"form-group\">\n    <label for=\"bio\" for=\"label-control\" rows=\"4\" cols=\"50\">Biography:</label>\n    <textarea formControlName=\"bio\" class=\"form-control\"> </textarea>\n  </div>\n  <button type=\"submit\">Submit</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-card',\n  templateUrl: './recipe-card.component.html',\n  styleUrls: ['./recipe-card.component.css']\n})\nexport class RecipeCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>recipe-card works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-details',\n  templateUrl: './recipe-details.component.html',\n  styleUrls: ['./recipe-details.component.css']\n})\nexport class RecipeDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>recipe-details works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-favorites',\n  templateUrl: './recipe-favorites.component.html',\n  styleUrls: ['./recipe-favorites.component.css']\n})\nexport class RecipeFavoritesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>recipe-favorites works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RecipeApiService } from 'src/app/services/recipeAPI.service';\n\n@Component({\n  selector: 'recipe-main',\n  templateUrl: './recipe-main.component.html',\n  styleUrls: ['./recipe-main.component.css'],\n})\nexport class RecipeMainComponent implements OnInit {\n  constructor(private recipeApi: RecipeApiService) {}\n\n  ngOnInit(): void {\n    this.recipeApi.getLetterA().subscribe((data) => {\n      console.log('letter A', data);\n    });\n  }\n}\n","<p>recipe-main works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-search',\n  templateUrl: './recipe-search.component.html',\n  styleUrls: ['./recipe-search.component.css']\n})\nexport class RecipeSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>recipe-search works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  constructor(private http: HttpClient) {}\n  users = [];\n\n  getUsers(): any {\n    return this.http.get('http://localhost:3000/users');\n  }\n\n  addNewUser(formValue) {\n    this.http\n      .post<{ message: string }>('http://localhost:3000/users', formValue)\n      .subscribe((response) => {\n        console.log(response.message);\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipeApiService {\n  baseUrl = 'https://www.thecocktaildb.com/api/json/v2/9973533/';\n\n  constructor(private http: HttpClient) {}\n\n  // list the categories\n  getCategories() {\n    return this.http.get(`${this.baseUrl}list.php?c=list`);\n  }\n\n  // glassware\n  getGlassware() {\n    return this.http.get(`${this.baseUrl}list.php?g=list`);\n  }\n\n  getAlcoholic() {\n    return this.http.get(`${this.baseUrl}list.php?a=list`);\n  }\n  getLetterA() {\n    return this.http.get(`${this.baseUrl}search.php?f=a`);\n  }\n\n  getLetter(letter) {\n    return this.http.get(`${this.baseUrl}search.php?f=${letter}`);\n  }\n\n  getIngredients() {\n    return this.http.get(`${this.baseUrl}list.php?i=list`);\n  }\n\n  getDetails(recipeId) {\n    return this.http.get(`${this.baseUrl}lookup.php?i=${recipeId}`);\n  }\n\n  filterNA(something) {\n    return this.http.get(`${this.baseUrl}filter.php?a=Alcoholic`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}