{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/new-user/login-form/login-form.component.ts","./src/app/components/new-user/login-form/login-form.component.html","./src/app/components/new-user/new-user-form/new-user-form.component.ts","./src/app/components/new-user/new-user-form/new-user-form.component.html","./src/app/components/preferences/preferences-bartenders/preferences-bartenders.component.ts","./src/app/components/preferences/preferences-bartenders/preferences-bartenders.component.html","./src/app/components/preferences/preferences-drinks/preferences-drinks.component.ts","./src/app/components/preferences/preferences-drinks/preferences-drinks.component.html","./src/app/components/preferences/preferences-homebar/preferences-homebar.component.ts","./src/app/components/preferences/preferences-homebar/preferences-homebar.component.html","./src/app/components/preferences/preferences-input/preferences-input.component.ts","./src/app/components/preferences/preferences-input/preferences-input.component.html","./src/app/components/preferences/preferences-locations/preferences-locations.component.ts","./src/app/components/preferences/preferences-locations/preferences-locations.component.html","./src/app/components/preferences/preferences-main/preferences-main.component.ts","./src/app/components/preferences/preferences-main/preferences-main.component.html","./src/app/components/recipe-book/recipe-card/recipe-card.component.ts","./src/app/components/recipe-book/recipe-card/recipe-card.component.html","./src/app/components/recipe-book/recipe-details/recipe-details.component.ts","./src/app/components/recipe-book/recipe-details/recipe-details.component.html","./src/app/components/recipe-book/recipe-favorites/recipe-favorites.component.ts","./src/app/components/recipe-book/recipe-favorites/recipe-favorites.component.html","./src/app/components/recipe-book/recipe-main/recipe-main.component.ts","./src/app/components/recipe-book/recipe-main/recipe-main.component.html","./src/app/components/recipe-book/recipe-search/alphabet.ts","./src/app/components/recipe-book/recipe-search/recipe-search.component.ts","./src/app/components/recipe-book/recipe-search/recipe-search.component.html","./src/app/components/user-recipes/user-recipes-create/user-recipes-create.component.ts","./src/app/components/user-recipes/user-recipes-create/user-recipes-create.component.html","./src/app/components/user-recipes/user-recipes-main/user-recipes-main.component.ts","./src/app/components/user-recipes/user-recipes-main/user-recipes-main.component.html","./src/app/services/login.service.ts","./src/app/services/recipeAPI.service.ts","./src/app/services/user-recipes.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './components/main/main.component';\nimport { RecipeDetailsComponent } from './components/recipe-book/recipe-details/recipe-details.component';\nimport { RecipeMainComponent } from './components/recipe-book/recipe-main/recipe-main.component';\nimport { PreferencesMainComponent } from './components/preferences/preferences-main/preferences-main.component';\n\nconst routes: Routes = [\n  { path: '', component: MainComponent },\n  { path: 'recipe-details/:recipeID', component: RecipeDetailsComponent },\n  { path: 'recipe-book', component: RecipeMainComponent },\n  { path: 'preferences', component: PreferencesMainComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<<<<<<< HEAD\n<recipe-main></recipe-main>\n=======\n<router-outlet></router-outlet>\n>>>>>>> 67eb7939fdd61be17c8565bce76d7e288768d6ff\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MainComponent } from './components/main/main.component';\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport { NewUserFormComponent } from './components/new-user/new-user-form/new-user-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RecipeMainComponent } from './components/recipe-book/recipe-main/recipe-main.component';\nimport { RecipeFavoritesComponent } from './components/recipe-book/recipe-favorites/recipe-favorites.component';\nimport { RecipeDetailsComponent } from './components/recipe-book/recipe-details/recipe-details.component';\nimport { RecipeCardComponent } from './components/recipe-book/recipe-card/recipe-card.component';\nimport { RecipeSearchComponent } from './components/recipe-book/recipe-search/recipe-search.component';\nimport { UserRecipesMainComponent } from './components/user-recipes/user-recipes-main/user-recipes-main.component';\nimport { UserRecipesCreateComponent } from './components/user-recipes/user-recipes-create/user-recipes-create.component';\nimport { LoginFormComponent } from './components/new-user/login-form/login-form.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { PreferencesMainComponent } from './components/preferences/preferences-main/preferences-main.component';\nimport { PreferencesHomebarComponent } from './components/preferences/preferences-homebar/preferences-homebar.component';\nimport { PreferencesLocationsComponent } from './components/preferences/preferences-locations/preferences-locations.component';\nimport { PreferencesBartendersComponent } from './components/preferences/preferences-bartenders/preferences-bartenders.component';\nimport { PreferencesDrinksComponent } from './components/preferences/preferences-drinks/preferences-drinks.component';\nimport { PreferencesInputComponent } from './components/preferences/preferences-input/preferences-input.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    NewUserFormComponent,\n    RecipeMainComponent,\n    RecipeFavoritesComponent,\n    RecipeDetailsComponent,\n    RecipeCardComponent,\n    RecipeSearchComponent,\n    UserRecipesMainComponent,\n    UserRecipesCreateComponent,\n    LoginFormComponent,\n    NavbarComponent,\n    PreferencesMainComponent,\n    PreferencesHomebarComponent,\n    PreferencesLocationsComponent,\n    PreferencesBartendersComponent,\n    PreferencesDrinksComponent,\n    PreferencesInputComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleMapsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RecipeApiService } from '../../services/recipeAPI.service';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css'],\n})\nexport class MainComponent implements OnInit {\n  categories: any[];\n  glasses: any[];\n  ingredients: any[];\n  alcoholics: any[];\n  zoom = 12;\n  center: google.maps.LatLngLiteral;\n  options: google.maps.MapOptions = {\n    mapTypeId: 'hybrid',\n    zoomControl: false,\n    scrollwheel: false,\n    disableDoubleClickZoom: true,\n    maxZoom: 15,\n    minZoom: 8,\n  };\n\n  latitude;\n  longitude;\n\n  constructor(\n    private recipeApi: RecipeApiService,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginService.getUsers().subscribe((data) => console.log(data));\n\n    this.recipeApi.getCategories().subscribe((data) => {\n      this.categories = data['drinks'];\n      // console.log(this.categories);\n    });\n\n    this.recipeApi.getGlassware().subscribe((data) => {\n      this.glasses = data['drinks'];\n      // console.log(this.glasses);\n    });\n\n    this.recipeApi.getIngredients().subscribe((data) => {\n      this.ingredients = data['drinks'];\n      console.log('Ingredients', this.ingredients);\n    });\n\n    this.recipeApi.getAlcoholic().subscribe((data) => {\n      this.alcoholics = data['drinks'];\n      // console.log(this.alcoholics);\n    });\n\n    this.recipeApi.getLetterA().subscribe((data) => {\n      console.log('letter A', data);\n    });\n\n    // navigator.geolocation.getCurrentPosition((position) => {\n    //   this.center = {\n    //     lat: position.coords.latitude,\n    //     lng: position.coords.longitude,\n    //   };\n    //   this.latitude = position.coords.latitude;\n    //   this.longitude = position.coords.longitude;\n    // });\n  }\n}\n","<preferences-input></preferences-input>\n<!-- <new-user-form></new-user-form> -->\n\n<ul>\n  <h1>Categories</h1>\n  <li *ngFor=\"let category of categories\">{{ category.strCategory }}</li>\n</ul>\n\n<ul>\n  <h1>Glasses</h1>\n  <li *ngFor=\"let glass of glasses\">{{ glass.strGlass }}</li>\n</ul>\n\n<!-- <ul>\n  <h1>Ingredients</h1>\n  <li *ngFor=\"let ingredient of ingredients\">{{ ingredients.strCategory }}</li>\n</ul> -->\n\n<ul>\n  <h1>Alcoholic</h1>\n  <li *ngFor=\"let alcoholic of alcoholics\">{{ alcoholic.strAlcoholic }}</li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<h1>NavBar</h1>\n<a href=\"#\">Posts</a>\n<a href=\"#\">Drinks</a>\n<a href=\"#\">User</a>\n<a href=\"#\">Favorites</a>\n<a href=\"#\">Quiz</a>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css'],\n})\nexport class LoginFormComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private loginService: LoginService, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      userName: [''],\n      password: [''],\n      loginDate: this.fb.control(new Date()),\n    });\n  }\n\n  onSubmit() {\n    console.log(this.loginForm.value);\n  }\n}\n","<h1>Login Form</h1>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"userName\">Username</label>\n    <input\n      type=\"text\"\n      name=\"userName\"\n      formControlName=\"userName\"\n      placeholder=\"Username\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input\n      type=\"password\"\n      name=\"password\"\n      formControlName=\"password\"\n      placeholder=\"Password\"\n    />\n  </div>\n  <button type=\"submit\">Log In</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'new-user-form',\n  templateUrl: './new-user-form.component.html',\n  styleUrls: ['./new-user-form.component.css'],\n})\nexport class NewUserFormComponent implements OnInit {\n  newUserForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private loginService: LoginService) {}\n\n  ngOnInit(): void {\n    this.newUserForm = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      userName: ['', [Validators.required]],\n      age: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        ],\n      ],\n      password2: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        ],\n      ],\n      bio: ['', [Validators.maxLength(255)]],\n      date: this.fb.control(new Date()),\n    });\n  }\n\n  validateDOB(dob) {\n    console.log(dob.target.value);\n\n    let year = new Date(dob.target.value).getFullYear();\n    let today = new Date().getFullYear();\n    if (today - year >= 21) {\n      console.log(`you can drink`);\n    } else {\n      console.log(`you are not old enough`);\n    }\n  }\n\n  // getFirstName() {\n  //   return this.newUserForm.get('firstName');\n  // }\n  // getUserName() {\n  //   return this.newUserForm.get('userName');\n  // }\n  // getAge() {\n  //   return this.newUserForm.get('age');\n  // }\n  // getEmail() {\n  //   return this.newUserForm.get('getEmail');\n  // }\n\n  onSubmit() {\n    // console.log('form', this.newUserForm.value);\n    this.loginService.addNewUser(this.newUserForm.value);\n  }\n}\n","<h1>New User Form</h1>\n<form [formGroup]=\"newUserForm\" (ngSubmit)=\"onSubmit()\">\n  <!-- first name - required-->\n  <div class=\"form-group\">\n    <label for=\"firstName\" for=\"label-control\"> First Name:</label>\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" />\n    <!-- <div *ngIf=\"firstName.invalid && firstName.touched\">\n      <div *ngIf=\"firstName.errors.required\">\n \n      </div>\n    </div> -->\n  </div>\n  <!-- last name - required -->\n  <div class=\"form-group\">\n    <label for=\"lastName\" for=\"label-control\">Last Name:</label>\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" />\n    <!-- <div *ngIf=\"lastName.invalid && lastName.touched\">\n      <div *ngIf=\"lastName.errors.required\">\n        Last Name is required\n      </div>\n    </div> -->\n  </div>\n  <!-- username - required -->\n  <div class=\"form-group\">\n    <label for=\"userName\" for=\"label-control\"> User Name:</label>\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\" />\n    <!-- <div *ngIf=\"userName.invalid && userName.touched\">\n      <div *ngIf=\"userName.errors.required\">\n        Username is required\n      </div>\n    </div> -->\n  </div>\n  <!-- age - required -->\n  <div class=\"form-group\">\n    <label for=\"age\" for=\"label-control\"> Age:</label>\n    <input\n      formControlName=\"age\"\n      class=\"form-control\"\n      (change)=\"validateDOB($event)\"\n      type=\"date\"\n      name=\"dob\"\n      placeholder=\"DOB\"\n    />\n  </div>\n  <!-- email - required -->\n  <div class=\"form-group\">\n    <label for=\"email\" for=\"label-control\">Email:</label>\n    <input type=\"email\" formControlName=\"email\" class=\"form-control\" />\n    <!-- <div *ngIf=\"userName.invalid && userName.touched\">\n      <div *ngIf=\"userName.errors.required\">\n        Username is required\n      </div>\n    </div> -->\n  </div>\n  <!-- password - required -->\n  <div class=\"form-group\">\n    <label for=\"password\" for=\"label-control\">Password:</label>\n    <input\n      type=\"password\"\n      formControlName=\"password\"\n      class=\"form-control\"\n      placeholder=\"password\"\n    />\n  </div>\n  <!-- password -2 - required -->\n  <div class=\"form-group\">\n    <label for=\"password\" for=\"label-control\">Password:</label>\n    <input\n      type=\"password\"\n      formControlName=\"password\"\n      class=\"form-control\"\n      placeholder=\"Confirm Password\"\n    />\n  </div>\n  <!-- bio - not required -->\n  <div class=\"form-group\">\n    <label for=\"bio\" for=\"label-control\" rows=\"4\" cols=\"50\">Biography:</label>\n    <textarea formControlName=\"bio\" class=\"form-control\"> </textarea>\n  </div>\n  <button type=\"submit\">Submit</button>\n\n  <a href=\"#\">Already registered? Click here to login</a>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preferences-bartenders',\n  templateUrl: './preferences-bartenders.component.html',\n  styleUrls: ['./preferences-bartenders.component.css']\n})\nexport class PreferencesBartendersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>preferences-bartenders works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preferences-drinks',\n  templateUrl: './preferences-drinks.component.html',\n  styleUrls: ['./preferences-drinks.component.css']\n})\nexport class PreferencesDrinksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>preferences-drinks works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preferences-homebar',\n  templateUrl: './preferences-homebar.component.html',\n  styleUrls: ['./preferences-homebar.component.css']\n})\nexport class PreferencesHomebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>preferences-homebar works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'preferences-input',\n  templateUrl: './preferences-input.component.html',\n  styleUrls: ['./preferences-input.component.css'],\n})\nexport class PreferencesInputComponent implements OnInit {\n  preferenceInput: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.preferenceInput = this.fb.group({\n      textInput: [''],\n    });\n  }\n\n  onSubmit() {\n    console.log(this.preferenceInput.value);\n  }\n}\n","<h1>preferences input</h1>\n<form [formGroup]=\"preferenceInput\" (ngSubmit)=\"onSubmit()\">\n  <label for=\"textInput\"></label>\n  <input\n    type=\"text\"\n    name=\"textInput\"\n    id=\"textInput\"\n    formControlName=\"textInput\"\n  />\n  <button type=\"submit\">Submit</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preferences-locations',\n  templateUrl: './preferences-locations.component.html',\n  styleUrls: ['./preferences-locations.component.css']\n})\nexport class PreferencesLocationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>preferences-locations works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'preferences-main',\n  templateUrl: './preferences-main.component.html',\n  styleUrls: ['./preferences-main.component.css'],\n})\nexport class PreferencesMainComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>preferences-main works!</p>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'recipe-card',\n  templateUrl: './recipe-card.component.html',\n  styleUrls: ['./recipe-card.component.css'],\n})\nexport class RecipeCardComponent implements OnInit {\n  @Input() recipe;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"card-container\">\n  <h3>{{ recipe.strDrink }}</h3>\n  <p>\n    <a routerLink=\"recipe-details/{{ recipe.idDrink }}\">more details</a>\n  </p>\n  <img\n    src=\"{{ recipe.strDrinkThumb }}\"\n    alt=\"{{ recipe.strDrink }}\"\n    width=\"100px\"\n  />\n  <p>Glassware: {{ recipe.strGlass }}</p>\n  <ul>\n    <h4>Ingredients</h4>\n    <li>{{ recipe.strMeasure1 }} {{ recipe.strIngredient1 }}</li>\n    <li>{{ recipe.strMeasure2 }} {{ recipe.strIngredient2 }}</li>\n    <li>{{ recipe.strMeasure3 }} {{ recipe.strIngredient3 }}</li>\n    <li>{{ recipe.strMeasure4 }} {{ recipe.strIngredient4 }}</li>\n    <li>{{ recipe.strMeasure5 }} {{ recipe.strIngredient5 }}</li>\n    <li>{{ recipe.strMeasure6 }} {{ recipe.strIngredient6 }}</li>\n    <li>{{ recipe.strMeasure7 }} {{ recipe.strIngredient7 }}</li>\n    <li>{{ recipe.strMeasure8 }} {{ recipe.strIngredient8 }}</li>\n    <li>{{ recipe.strMeasure9 }} {{ recipe.strIngredient9 }}</li>\n    <li>{{ recipe.strMeasure10 }} {{ recipe.strIngredient10 }}</li>\n    <li>{{ recipe.strMeasure11 }} {{ recipe.strIngredient11 }}</li>\n    <li>{{ recipe.strMeasure12 }} {{ recipe.strIngredient12 }}</li>\n    <li>{{ recipe.strMeasure13 }} {{ recipe.strIngredient13 }}</li>\n    <li>{{ recipe.strMeasure14 }} {{ recipe.strIngredient14 }}</li>\n    <li>{{ recipe.strMeasure15 }} {{ recipe.strIngredient15 }}</li>\n  </ul>\n  <p>Method: {{ recipe.strInstructions }}</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RecipeApiService } from '../../../services/recipeAPI.service';\n\n@Component({\n  selector: 'app-recipe-details',\n  templateUrl: './recipe-details.component.html',\n  styleUrls: ['./recipe-details.component.css'],\n})\nexport class RecipeDetailsComponent implements OnInit {\n  recipeDetails;\n  recipeID: number;\n\n  constructor(\n    private recipeAPI: RecipeApiService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.recipeID = this.route.snapshot.params.recipeID;\n\n    this.recipeAPI.getDetails(this.recipeID).subscribe((data) => {\n      console.log(data);\n    });\n  }\n}\n","<p>recipe-details works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-favorites',\n  templateUrl: './recipe-favorites.component.html',\n  styleUrls: ['./recipe-favorites.component.css']\n})\nexport class RecipeFavoritesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>recipe-favorites works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RecipeApiService } from 'src/app/services/recipeAPI.service';\n\n@Component({\n  selector: 'recipe-main',\n  templateUrl: './recipe-main.component.html',\n  styleUrls: ['./recipe-main.component.css'],\n})\nexport class RecipeMainComponent implements OnInit {\n  recipes: any[];\n\n  constructor(private recipeApi: RecipeApiService) {}\n\n  ngOnInit(): void {\n    this.recipeApi.getLetterA().subscribe((data) => {\n      this.recipes = data['drinks'];\n      console.log(this.recipes);\n    });\n  }\n\n  nameSearch(results) {\n    // console.log(results);\n    this.recipes = results;\n  }\n}\n","<recipe-search (searchResults)=\"nameSearch($event)\"></recipe-search>\n<recipe-card [recipe]=\"recipe\" *ngFor=\"let recipe of recipes\"></recipe-card>\n","export const ALPHABET: string[] = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n];\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { RecipeApiService } from '../../../services/recipeAPI.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ALPHABET } from './alphabet';\n\n@Component({\n  selector: 'recipe-search',\n  templateUrl: './recipe-search.component.html',\n  styleUrls: ['./recipe-search.component.css'],\n})\nexport class RecipeSearchComponent implements OnInit {\n  glassware: any;\n  alcoholic: any;\n  categories: any;\n  alphabet: string[] = ALPHABET;\n  filterForm: FormGroup;\n  nameSearch: FormGroup;\n  letterSearch: FormGroup;\n  @Output() searchResults = new EventEmitter();\n\n  constructor(private fb: FormBuilder, private recipeAPI: RecipeApiService) {}\n\n  ngOnInit(): void {\n    this.recipeAPI.getGlassware().subscribe((data) => {\n      this.glassware = data['drinks'];\n    });\n    this.recipeAPI.getAlcoholic().subscribe((data) => {\n      this.alcoholic = data['drinks'];\n    });\n    this.recipeAPI.getCategories().subscribe((data) => {\n      this.categories = data['drinks'];\n    });\n\n    this.recipeAPI.filterCocktailType().subscribe((data) => {\n      console.log('filter cocktails', data['drinks']);\n    });\n\n    // this.filterForm = this.fb.group({\n    //   glassware: [''],\n    //   categories: [''],\n    //   booze: [''],\n    //   alphabet: [''],\n    // });\n    this.nameSearch = this.fb.group({\n      searchName: [''],\n    });\n\n    this.letterSearch = this.fb.group({\n      letter: [''],\n    });\n  }\n\n  searchByName() {\n    this.recipeAPI\n      .searchByName(this.nameSearch.value)\n      .subscribe((data) => this.searchResults.emit(data['drinks']));\n  }\n\n  searchByLetter() {\n    this.recipeAPI.searchByLetter(this.letterSearch.value).subscribe((data) => {\n      this.searchResults.emit(data['drinks']);\n    });\n  }\n\n  resetForm() {\n    this.filterForm.reset();\n  }\n}\n","<!-- <form [formGroup]=\"filterForm\">\n  <div class=\"form-group\">\n    <label for=\"categories\"> Choose a Category</label>\n    <select formControlName=\"categories\" name=\"categories\" id=\"categories\">\n      <option value=\"\">Category</option>\n      <option\n        *ngFor=\"let category of categories\"\n        value=\"{{ category.strCategory }}\"\n        >{{ category.strCategory }}</option\n      >\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"alphabet\"> Choose a Letter</label>\n    <select formControlName=\"alphabet\" name=\"alphabet\" id=\"alphabet\">\n      <option value=\"\">Letters</option>\n      <option *ngFor=\"let letters of alphabet\" value=\"{{ letters }}\">{{\n        letters\n      }}</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <select formControlName=\"glassware\" name=\"glassware\" id=\"glassware\">\n      <option value=\"\">Glassware</option>\n      <option *ngFor=\"let glass of glassware\" value=\"{{ glass.strGlass }}\">{{\n        glass.strGlass\n      }}</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <input\n      formControlName=\"booze\"\n      type=\"radio\"\n      id=\"Alcoholic\"\n      name=\"booze\"\n      value=\"Alcoholic\"\n    />\n    <label for=\"Alcoholic\">Alcoholic</label><br />\n    <input\n      formControlName=\"booze\"\n      type=\"radio\"\n      id=\"non-alcoholic\"\n      name=\"booze\"\n      value=\"Non alcoholic\"\n    />\n    <label for=\"non-alcoholic\">Non Alcoholic</label><br />\n  </div>\n  <button (click)=\"resetForm()\">Reset Form</button>\n</form> -->\n\n<form [formGroup]=\"nameSearch\" (ngSubmit)=\"searchByName()\">\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      placeholder=\"Search by Name\"\n      formControlName=\"searchName\"\n    />\n  </div>\n  <button type=\"submit\">Submit</button>\n</form>\n\n<form [formGroup]=\"letterSearch\" (ngSubmit)=\"searchByLetter()\">\n  <div class=\"form-group\">\n    <label for=\"alphabet\"> Choose a Letter</label>\n    <select formControlName=\"letter\" name=\"letter\" id=\"letter\">\n      <option value=\"\">Letters</option>\n      <option *ngFor=\"let letters of alphabet\" value=\"{{ letters }}\">{{\n        letters\n      }}</option>\n    </select>\n  </div>\n  <button type=\"submit\">Submit</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { RecipeApiService } from 'src/app/services/recipeAPI.service';\nimport { UserRecipesService } from 'src/app/services/user-recipes.service';\n\n@Component({\n  selector: 'user-recipes-create',\n  templateUrl: './user-recipes-create.component.html',\n  styleUrls: ['./user-recipes-create.component.css'],\n})\nexport class UserRecipesCreateComponent implements OnInit {\n  userRecipe: FormGroup;\n  ratingChange;\n  glassware;\n  latitude;\n  longitude;\n\n  constructor(\n    private fb: FormBuilder,\n    private recipeAPI: RecipeApiService,\n    private userRecipeService: UserRecipesService\n  ) {}\n\n  ngOnInit(): void {\n    this.recipeAPI.getGlassware().subscribe((data) => {\n      this.glassware = data['drinks'];\n    });\n    const element = this.fb.group({\n      amount: [''],\n      ingredient: [''],\n    });\n\n    this.userRecipe = this.fb.group({\n      name: ['', [Validators.required]],\n      rating: [''],\n      glassware: [''],\n      latitude: [''],\n      longitude: [''],\n      method: [''],\n      ingredient1: element,\n      ingredient2: element,\n      ingredient3: element,\n      ingredient4: element,\n      ingredient5: element,\n      date: this.fb.control(new Date()),\n    });\n  }\n\n  // removeIngredient(i) {\n  //   let ingredientsArray = this.userRecipe.controls.ingredients as FormArray;\n  //   ingredientsArray.removeAt(i);\n  // }\n\n  // addIngredient() {\n  //   let ingredientsArray = this.userRecipe.controls.ingredients as FormArray;\n  //   let arrayLen = ingredientsArray.length;\n\n  //   let newIngredientGroup: FormGroup = this.fb.group({\n  //     amount: [''],\n  //     ingredient: [''],\n  //   });\n\n  //   ingredientsArray.insert(arrayLen, newIngredientGroup);\n  // }\n\n  changeRating(value) {\n    console.log(value);\n\n    // this.ratingChange = value;\n  }\n  onSubmit() {\n    this.userRecipeService.addNewRecipe(this.userRecipe.value);\n  }\n\n  getLocation() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.latitude = position.coords.latitude;\n      this.longitude = position.coords.longitude;\n    });\n  }\n}\n","<h1>create recipe</h1>\n<form [formGroup]=\"userRecipe\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label>Drink Name</label>\n    <input type=\"text\" formControlName=\"name\" />\n  </div>\n  <!-- ratings slider -->\n  <div class=\"form-group\">\n    <input\n      type=\"range\"\n      min=\"1\"\n      max=\"5\"\n      value=\"0\"\n      step=\".5\"\n      class=\"slider\"\n      id=\"rating-slider\"\n      formControlName=\"rating\"\n    />\n    <!-- <span>Rating: {{ ratingChange.value }}</span> -->\n  </div>\n  <!-- glassware dropdown -->\n  <div class=\"form-group\">\n    <select formControlName=\"glassware\" name=\"glassware\" id=\"glassware\">\n      <option value=\"\">Glassware</option>\n      <option *ngFor=\"let glass of glassware\" value=\"{{ glass.strGlass }}\">{{\n        glass.strGlass\n      }}</option>\n    </select>\n  </div>\n  <!-- location -->\n  <div class=\"form-group\">\n    <button (click)=\"getLocation()\">Get Location</button>\n    <p>\n      Latitude: <span>{{ latitude }}</span\n      >&deg;\n    </p>\n    <p>\n      Longitude: <span>{{ longitude }}</span\n      >&deg;\n    </p>\n  </div>\n  <!-- method -->\n  <div class=\"form-group\">\n    <label for=\"method\">Method:</label>\n    <textarea\n      name=\"method\"\n      formControlName=\"method\"\n      id=\"method\"\n      cols=\"30\"\n      rows=\"10\"\n    ></textarea>\n  </div>\n  <!-- ingredient -->\n  <div formGroupName=\"ingredient1\">\n    <input type=\"text\" formControlName=\"amount\" />\n    <input type=\"text\" formControlName=\"ingredient\" />\n  </div>\n  <div formGroupName=\"ingredient2\">\n    <input type=\"text\" formControlName=\"amount\" />\n    <input type=\"text\" formControlName=\"ingredient\" />\n  </div>\n  <div formGroupName=\"ingredient3\">\n    <input type=\"text\" formControlName=\"amount\" />\n    <input type=\"text\" formControlName=\"ingredient\" />\n  </div>\n  <div formGroupName=\"ingredient4\">\n    <input type=\"text\" formControlName=\"amount\" />\n    <input type=\"text\" formControlName=\"ingredient\" />\n  </div>\n  <div formGroupName=\"ingredient5\">\n    <input type=\"text\" formControlName=\"amount\" />\n    <input type=\"text\" formControlName=\"ingredient\" />\n  </div>\n  <!-- submit button -->\n  <button type=\"submit\">Submit</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { UserRecipesService } from 'src/app/services/user-recipes.service';\n\n@Component({\n  selector: 'user-recipes-main',\n  templateUrl: './user-recipes-main.component.html',\n  styleUrls: ['./user-recipes-main.component.css'],\n})\nexport class UserRecipesMainComponent implements OnInit {\n  constructor(private userRecipeService: UserRecipesService) {}\n\n  ngOnInit(): void {\n    this.userRecipeService\n      .getRecipes()\n      .subscribe((data) => console.log('User Recipes', data));\n  }\n}\n","<user-recipes-create></user-recipes-create>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  constructor(private http: HttpClient) {}\n  users = [];\n\n  getUsers(): any {\n    return this.http.get('/api/users');\n  }\n\n  addNewUser(formValue) {\n    this.http\n      .post<{ message: string }>('/api/users', formValue)\n      .subscribe((response) => {\n        console.log(response.message);\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipeApiService {\n  baseUrl = 'https://www.thecocktaildb.com/api/json/v2/9973533/';\n\n  constructor(private http: HttpClient) {}\n\n  // list the categories\n  getCategories() {\n    return this.http.get(`${this.baseUrl}list.php?c=list`);\n  }\n\n  // glassware\n  getGlassware() {\n    return this.http.get(`${this.baseUrl}list.php?g=list`);\n  }\n\n  getAlcoholic() {\n    return this.http.get(`${this.baseUrl}list.php?a=list`);\n  }\n  getLetterA() {\n    return this.http.get(`${this.baseUrl}search.php?f=a`);\n  }\n\n  getLetter(letter) {\n    return this.http.get(`${this.baseUrl}search.php?f=${letter}`);\n  }\n\n  getIngredients() {\n    return this.http.get(`${this.baseUrl}list.php?i=list`);\n  }\n\n  getDetails(recipeID) {\n    return this.http.get(`${this.baseUrl}lookup.php?i=${recipeID}`);\n  }\n\n  filterNA(something) {\n    return this.http.get(`${this.baseUrl}filter.php?a=Alcoholic`);\n  }\n\n  filterCocktailType() {\n    return this.http.get(`${this.baseUrl}filter.php?g=Cocktail_glass`);\n  }\n\n  searchByName(name) {\n    return this.http.get(`${this.baseUrl}search.php?s=${name.searchName}`);\n  }\n\n  searchByLetter(letter) {\n    // console.log(letter);\n    return this.http.get(`${this.baseUrl}search.php?f=${letter.letter}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserRecipesService {\n  constructor(private http: HttpClient) {}\n\n  addNewRecipe(formValue) {\n    console.log(formValue);\n\n    this.http\n      .post<{ message: string }>('/api/recipes', formValue)\n      .subscribe((response) => {\n        console.log(response.message);\n      });\n  }\n\n  getRecipes() {\n    return this.http.get('/api/recipes');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}